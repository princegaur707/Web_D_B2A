p{
    font-size: 18px;
    /* font-size: 2cm; */
    /* font-size: 2em;    two times of what we have specified */
    /* font-size: 3rem;   two times of browsers' specified */
    /* Above are gen. used in smaking website responsive */
    /* font-size: 10vw;  */
    /* vw: entire viewable width
    10%vw: 10 percent of viewable width */
    /* font-size: 10vh%; */
    /* vh: entire viewable height */
    /* 10%vh: 10 percent of viewable height */   
}
p{
    width:200px;
    height:200px;
    background-color: blue;
}
.one{
    background-color: red;
} 
.two{
    width:300px;
    height:300px;
    background-color: rgb(224, 61, 162);
    /* value of rgb vary from 0 to 255 */
    background-color: #9e5099;
    /* hex value changes from 0 to 9 a - f hex value is useful if you are working in company
    and you need to add something of same color we will never know the name of that shade 
    so we will need to use hex value only */
    /* HSL is not used much */
    background: linear-gradient(to right,red,blue); 
    /* minimum two colors are required more than these can be entered
    to right helps in setting direction */
    background: linear-gradient(70deg,red 50%,green ,blue);
    /* 70 deg sets the direction */
}
.three{
    /* Rainbow */
    width:400px;
    height:400px;
    background: linear-gradient(to right,violet, Indigo,blue,green,yellow,red);
}
/* Gradient: This is use for mixing the colors we cannot determine where colors are mixed */
.four
{
    margin-top:100px;
    width:300px;
    height:300px;
    background:radial-gradient(circle,yellow 50%,aqua);
}
.five{
    /* Sun: RED, Orange Yellow */
    width: 300px;
    height:300px;
    background: radial-gradient(circle,red,orange,yellow);
}
/* transformations : give differenet shapes to container*/
.six{
    width: 200px;
    height:200px;
    background-color: red; 
    transform: skewX(30deg);    
    transform: skewX(30deg);    
    /* tilts the shape in specified direction skewX(required degree)*/
    transform: skewY(30deg);
    /* it goes into other box too due to tilting area */
    transform: skew(30deg,30deg);
    
}
.seven{
    background-color: green;
    width:200px;
    height:200px;
    margin-top:100px;
    transform: scaleX(2) ;
    /* Will double the size in x direction */
    transform:scaleY(0.5);
    transform: scale(2,0.5);
    /* actually it remain same just visible only */
    /* scale is making size big or small */
    transform: translate(50px,200px);/*overwriting other tranforms*/
    /* it will work like margin first one x and then y*/
    transform:scaleX(2) translate(100px,100px);/*If want to use multiple tranform values*/
    transform: rotate(45deg);
    /* Order : x and y opposite of margin and padding */
    /* 3 D  we don't get to know if even if it applied with just eyes if we have to use
    inspect to get to see how it is working but still it's working can be done with roateX
    and rotateY only*/
    /* transform:rotateX(30deg);
    transform:rotateY(30deg);
    transform:rotateZ(30deg); */
}
.eight{
    width:200px;
    height:200px;
    background-color: aqua;
    transition-property: background-color;
    transition-duration: 3s;
    transition-delay: 1s;
    transition-timing-function:linear;
    margin-top:100px;
    /* transition-timing-function:-
    ease-in: easy(slow) while starting
    ease-out: easy(slow) while ending
    ease-in-out: slow at both start and end fast in middle(transiton)
    */
}
.eight:hover{
    background-color: yellow;
}
.nine{
    width:300px;
    height:300px;
    background-color: #9e5099;
    animation-name: animation1;
    position: relative;
    /* we will have to give name to animation */
    animation-duration: 5s;
    animation-delay:1s;
    animation-iteration-count: 5;
    animation-timing-function: linear;
}
@keyframes animation1{
    0%{
        background-color: blue;
        top:0px;
        left:0px;
    }
    25%{
        /* here we are saying to use this for 25% of the allotted time */
        background-color: aqua;
        top:0px;
        left:200px;
    }
    50%{
        background-color:red;
        top:200px;
        left:200px;
    }
    100%{
        background-color:blue;
        top:200px;
        left:0px;
    }
}
.ten{
    width:vw;
    height:5px;
    background-color: black;
    margin-top: 200px;
}
.eleven{
    width:200px;
    height:200px;
    position:relative;
    background-color: darkcyan;
    animation-name: animation2;
    animation-duration: 5s;
    animation-delay: 1s;
    animation-iteration-count: 5;
    animation-timing-function: linear;
}
@keyframes animation2{
    0%{
        left:0%;
    }
    25%{
        left:45%;
    }
    50%{
        left:90%;
    }
    75%{
        left:45%;
    }
    100%{
        left:0%;
    }
}
.twelve{
    width:100%;
    height:5px;
    background-color: black;
}
.container{
    background-color: aqua;
    /* flex-direction: column;    will make the rows now */
    /* flex-direction: row-reverse; this will make the last one come first and also row
    will start from right */
    /* flex-direction: column-reverse similarly it will start from bottom to top */
    justify-content: space-evenly;
    display:flex;
     
}
.demo{
    background-color: black;   
    color:white;
    padding: 50px;
    margin-left:50px;
}
/* for icons-
1) Font awesome 
2) cdnjs.com*/